<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
	<context:component-scan base-package="cn.ystk.pro.*" />
	<aop:aspectj-autoproxy />
	<!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 配置数据源 ，dbcp -->
	<bean id="sqlserverDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.sqlserver.driver}" />
		<property name="url" value="${jdbc.sqlserver.url}" />
		<property name="username" value="${jdbc.sqlserver.username}" />
		<property name="password" value="${jdbc.sqlserver.password}" />
	</bean>
	<!--配置多数据源数据库，并设置默认数据库 ，代码在util(database下面)并在mapper层配置数据库注解，自动扫描 -->
	<!--手动配置在service的impl层MultipleDataSource.setDataSourceKey("oracleDS"); -->
	<bean id="dataSource" class="cn.ystk.pro.util.database.MultipleDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="sqlserverDataSource" key="sqlserverDS" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="sqlserverDataSource" />
	</bean>
	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
	</bean>
	<!-- mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
		<property name="basePackage"
			value="cn.ystk.pro.user.mapper,cn.ystk.pro.menu.mapper,cn.ystk.pro.role.mapper,cn.ystk.pro.userrole.mapper,cn.ystk.pro.rolemodule.mapper,cn.ystk.pro.photo.mapper,cn.ystk.pro.photodetains.mapper,cn.ystk.pro.tang.mapper,cn.ystk.pro.task.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- <bean id="tangMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="cn.ystk.pro.tang.mapper.TangMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean> -->
</beans>